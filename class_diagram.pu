@startuml
hide empty methods
hide circle
skinparam class {
  BackgroundColor White
  ArrowColor Black
  BorderColor Black
}

class myMain {
 + myMain()
}

class Game {
 - gameState : GameState
 - stage: Stage
 - gameMenu : gameMenu
 + run()
}

enum GameState <<enum>> {
 - inGame
 - inMenu
}

class GameMenu {
 - menuState : MenuState
 + renderMainMenu()
 + renderSettingMenu()
 + renderPlayMenu()
 + renderUpgradeMenu()
 + processMenuEvent()
}

enum MenuState <<enum>> {
 - inMainMenu
 - inPlayMenu
 - inSettingsMenu
 - inUpgradeMenu
}

class Stage {
 - size : sf::Vector2f
 - name : string
 - player : std::shared_ptr<Player>
 - enemies : std::unique_ptr<Enemy>
 - collectibles : std::unique_ptr<Collectible>
 + update()
 + checkColision()
 + render()
}

class Entity {
 - entityBox : sf::RectangleShape
 - length : float
 - height : float
 + moveEntity()
}

class Stats {
 - baseHealth : float
 - currentHealth : float
 - baseDamage : float
 - damageMultiplier : float
 - baseSpeed : float
 - shotDelay : float
 - shotSpeed : float
}

class Player {
 - level : int
 - experience : float
 - money : int
 + levelUp()
 + takeDamage()
 + render()
 + update()
 + shoot()
}

class Enemy {
 - enemyType : string
 - movementPatern : string
 - shootingPatern : string
 - target : sf::Entity
 + update()
 + checkBounds()
 + shoot()
 + dropCollectible()
}

class Projectile {
 - isAlly : bool
 - damage : float
 - direction: sf::Vector2f
 + update()
}

class Collectible {
 - type : CollectibleType
 - value : float
 + getCollectibleType()
 + getCollectibleValue()
}

enum CollectibleType <<enum>> {
 - experience
 - health
 - money
}

class LivingEntity {
 - stats : Stats
 - isAlly : bool
 - projectiles : std::shared_ptr<Projectile>
 + takeDamage()
 + shoot()
}

class SoundManager {
 - soundBuffers : std::vector<sf::SoundBuffer>
 - sounds : std::vector<sf::Sound>
 + playSound()
 + changeVolume()

'Liens entre les classes'

myMain --> Game

Game -- Stage
Game -- GameMenu

Entity <|-- LivingEntity
Entity <|-- Projectile
Entity <|-- Collectible

LivingEntity <|-- Player
LivingEntity <|-- Enemy

Stage --> Player
Stage --> "0..n" Enemy
Stage --> "0..n" Collectible
Stage -- SoundManager

Projectile "0..n" -- LivingEntity

LivingEntity --> Stats

@enduml